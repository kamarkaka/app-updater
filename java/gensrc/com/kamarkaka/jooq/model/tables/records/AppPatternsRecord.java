/*
 * This file is generated by jOOQ.
 */
package com.kamarkaka.jooq.model.tables.records;


import com.kamarkaka.jooq.model.tables.AppPatterns;

import java.util.UUID;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class AppPatternsRecord extends UpdatableRecordImpl<AppPatternsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.app_patterns.pattern_id</code>.
     */
    public void setPatternId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.app_patterns.pattern_id</code>.
     */
    public Integer getPatternId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.app_patterns.app_id</code>.
     */
    public void setAppId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.app_patterns.app_id</code>.
     */
    public UUID getAppId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.app_patterns.pattern</code>.
     */
    public void setPattern(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.app_patterns.pattern</code>.
     */
    public String getPattern() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AppPatternsRecord
     */
    public AppPatternsRecord() {
        super(AppPatterns.APP_PATTERNS);
    }

    /**
     * Create a detached, initialised AppPatternsRecord
     */
    public AppPatternsRecord(Integer patternId, UUID appId, String pattern) {
        super(AppPatterns.APP_PATTERNS);

        setPatternId(patternId);
        setAppId(appId);
        setPattern(pattern);
        resetChangedOnNotNull();
    }
}
