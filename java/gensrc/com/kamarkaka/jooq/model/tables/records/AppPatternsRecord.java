/*
 * This file is generated by jOOQ.
 */
package com.kamarkaka.jooq.model.tables.records;


import com.kamarkaka.jooq.model.tables.AppPatterns;

import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AppPatternsRecord extends UpdatableRecordImpl<AppPatternsRecord> implements Record3<Integer, UUID, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.app_patterns.pattern_id</code>.
     */
    public void setPatternId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.app_patterns.pattern_id</code>.
     */
    public Integer getPatternId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.app_patterns.app_id</code>.
     */
    public void setAppId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.app_patterns.app_id</code>.
     */
    public UUID getAppId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.app_patterns.pattern</code>.
     */
    public void setPattern(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.app_patterns.pattern</code>.
     */
    public String getPattern() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, UUID, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, UUID, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return AppPatterns.APP_PATTERNS.PATTERN_ID;
    }

    @Override
    public Field<UUID> field2() {
        return AppPatterns.APP_PATTERNS.APP_ID;
    }

    @Override
    public Field<String> field3() {
        return AppPatterns.APP_PATTERNS.PATTERN;
    }

    @Override
    public Integer component1() {
        return getPatternId();
    }

    @Override
    public UUID component2() {
        return getAppId();
    }

    @Override
    public String component3() {
        return getPattern();
    }

    @Override
    public Integer value1() {
        return getPatternId();
    }

    @Override
    public UUID value2() {
        return getAppId();
    }

    @Override
    public String value3() {
        return getPattern();
    }

    @Override
    public AppPatternsRecord value1(Integer value) {
        setPatternId(value);
        return this;
    }

    @Override
    public AppPatternsRecord value2(UUID value) {
        setAppId(value);
        return this;
    }

    @Override
    public AppPatternsRecord value3(String value) {
        setPattern(value);
        return this;
    }

    @Override
    public AppPatternsRecord values(Integer value1, UUID value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AppPatternsRecord
     */
    public AppPatternsRecord() {
        super(AppPatterns.APP_PATTERNS);
    }

    /**
     * Create a detached, initialised AppPatternsRecord
     */
    public AppPatternsRecord(Integer patternId, UUID appId, String pattern) {
        super(AppPatterns.APP_PATTERNS);

        setPatternId(patternId);
        setAppId(appId);
        setPattern(pattern);
        resetChangedOnNotNull();
    }
}
